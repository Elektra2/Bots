#–ò–º–ø–æ—Ä—Ç—ã
from aiogram import types
from config.bot_config import dp, bot
import aiocron
import datetime
from bd_handlers.materials.get_users import get_user_by_sd
from bd_handlers.materials.get_users import get_user_by_pd
from bd_handlers.user_profile.chage_user_role import change_role
from bd_handlers.subscription.change_update import change_update
from bd_handlers.subscription.change_final import change_final
from bd_handlers.subscription.change_final import post_count
from bd_handlers.subscription.change_id import change_id
from bd_handlers.subscription.change_post_date import change_post_date
from aiogram.utils.exceptions import BotBlocked

@aiocron.crontab('00 10 * * *')
async def days():
    sub_users = await get_user_by_sd(sd=datetime.date.today())
    for user_id in sub_users:
        try:
            await change_role(user_id=user_id['user_id'],score="basic")
            await change_update(user_id=user_id['user_id'])
            await bot.send_message(chat_id=user_id['user_id'],
                               text="–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –ø–æ–¥–ø–∏—Å–∫–∞ Plus, –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–Ω–æ–≤–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –µ–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.")
        except BotBlocked:
            continue
    
    sub_end_users = await get_user_by_sd(sd=datetime.date.today()+datetime.timedelta(days=1))
    for user_id in sub_end_users:
        try:
            await change_update(user_id=user_id['user_id'])
            await bot.send_message(chat_id=user_id['user_id'],
                                text="–ó–∞–≤—Ç—Ä–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞ Plus, –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–ª–∏—Ç—å –µ–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.")
        except BotBlocked:
            continue
    

@aiocron.crontab('00 10 * * *')
async def days_post():
    post_data =await get_user_by_pd(pd=datetime.date.today())
    for post in post_data:
        if post['test_comp'] == 1:
            n = await post_count(post_for=post['user_role'],post_lvl=post['score'])
            s = "post_id_"+post['user_role']
            id = post[s] + 1
            print(id,n-1)
            try:
                if id > n-1:
                    await change_final(user_id=post['user_id'])
                    await bot.send_message(chat_id=post['user_id'],
                                text=f"–í—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫–∞—Ä—É—Å–∞ –¥–ª—è —É—Ä–æ–≤–Ω—è {post['score']}. –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–π–¥–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –≤ –º–µ–Ω—é EduCourse.")
                else:
                    await change_id(user_id=post['user_id'],name=s)
                    if post['user_role'] == 'basic': date = datetime.date.today()+datetime.timedelta(days=7)
                    elif post['user_role'] == 'plus': date = datetime.date.today()+datetime.timedelta(days=4)
                    await change_post_date(user_id=post['user_id'],post_date=date)
                    await bot.send_message(chat_id=post['user_id'],
                                text="–í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ãü•≥.")
            except BotBlocked:
                continue
        else:
            try:
                await change_post_date(user_id=post['user_id'],post_date=datetime.date.today()+datetime.timedelta(days=1))
                await bot.send_message(chat_id=post['user_id'],
                                text="–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ –ø—Ä–æ–π–¥–∏—Ç–µ —Ç–µ—Å—Ç.")
            except BotBlocked:
                continue